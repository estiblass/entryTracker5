name: EntryTracker CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-test-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unit test - start app and test with curl
        run: |
          python app.py &
          sleep 5
          curl -f http://localhost:5000 || exit 1

      - name: Build Docker image
        run: docker build -t entrytracker:latest .

  e2e-test:
    runs-on: ubuntu-latest
    needs: build-test-package

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: example
          MYSQL_DATABASE: entrytracker_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (includes Compose)
        uses: docker/setup-buildx-action@v3

      - name: Start docker-compose
        run: |
          docker compose up -d
          sleep 15

      - name: Run E2E test with curl
        run: curl -f http://localhost:5000 || exit 1

      - name: Shutdown docker-compose
        run: docker compose down

  push-image:
    runs-on: ubuntu-latest
    needs: e2e-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/entrytracker:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/entrytracker:latest
